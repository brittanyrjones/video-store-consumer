import React, { Component } from 'react';
import PropTypes from 'prop-types';
import axios from 'axios';
import './RentalCreator.css';


class RentalCreator extends Component {

  constructor(props) {
    super(props);
    this.state = {
      badRentalAttempt: false
    };
  }

  valid_rental = () => {
  return this.props.movie.length > 0 &&
         this.props.customerName.length > 0;
  }

  onSubmitRental = (event) => {
    event.preventDefault();
    if (this.valid_rental()) {
      this.postRental()
    } else {
      this.setState({
        message: `Pick a customer and a movie first!`,
        badRentalAttempt: true
      })
      console.log("Here is the message generated by the submit attempt:")
      console.log(this.state.message)
      console.log("Here is the state of badRentalAttempt")
      console.log(this.state.badRentalAttempt)
    }
  }

  postRental = () => {
    const BASE_URL = 'http://localhost:3000/rentals/'
    let titleToRent = this.props.movie
    let customerRenting = this.props.customer
    let requestURL = `${BASE_URL}${titleToRent}/check-out`
    console.log("This is the current Request URL:")
    console.log(requestURL)
    axios.post(requestURL, customerRenting)
    .then((response) => {
        console.log(response)
        this.setState({
          message: `${customerRenting} just checked out ${titleToRent}!`
        })
        this.clearSpotlightCallback()
      })
    .catch((error) => {
      this.setState({ message: error.message });
    });
  }

  showMessage = () => {
    if (this.state.message) {
     return (this.state.message)
   }
  }

  render() {

    let goodOrBadRental;
    if (this.state.badRentalAttemt == false) {
      goodOrBadRental = "okay"
    } else {goodOrBadRental = "badnews" }


    return (
      <section className="rental-creator">
        <section className={goodOrBadRental}>
          <h3>CLICK HERE TO CREATE A NEW RENTAL</h3>
          <section className="message-area">
            {this.state.message}
          </section>
        </section>
      </section>
    );
  }
}

RentalCreator.propTypes = {
  customerName: PropTypes.string.isRequired,
  customerId: PropTypes.number.isRequired,
  movie: PropTypes.string.isRequired,
  clearSpotlightCallback: PropTypes.func.isRequired
};

export default RentalCreator;
